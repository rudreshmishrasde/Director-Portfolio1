{"ast":null,"code":"export const getBestRatedFilm = films => {\n  var _bestRatedFilm2;\n  let bestRatedFilm = {\n    rating: 0\n  };\n  films.forEach(film => {\n    var _bestRatedFilm;\n    if ((film === null || film === void 0 ? void 0 : film.rating) > ((_bestRatedFilm = bestRatedFilm) === null || _bestRatedFilm === void 0 ? void 0 : _bestRatedFilm.rating)) bestRatedFilm = {\n      ...film\n    };\n  });\n  console.log(\"error111\", bestRatedFilm);\n  return (_bestRatedFilm2 = bestRatedFilm) === null || _bestRatedFilm2 === void 0 ? void 0 : _bestRatedFilm2.name;\n};\nexport const getLongestFilmDuration = films => {\n  let longestFilm = {\n    length: 0\n  };\n  films.forEach(film => {\n    if (film.length > longestFilm.length) longestFilm = {\n      ...film\n    };\n  });\n  return `${longestFilm.length} minutes`;\n};\nexport const getAvgRating = films => {\n  let avgRating = 0;\n  films.forEach(film => {\n    avgRating += film.rating;\n  });\n  const result = avgRating / films.length;\n  const resultArray = String(result).split(\".\");\n  return resultArray[0] + \".\" + resultArray[1].slice(0, 2);\n};\nexport const getShortestDays = films => {\n  const dateObjectArray = [];\n  films.forEach(film => {\n    const formattedDate = createDateObject(film === null || film === void 0 ? void 0 : film.releaseDate);\n    dateObjectArray.push({\n      ...film,\n      releaseDate: formattedDate\n    });\n  });\n  const sortedArray = dateObjectArray.sort((a, b) => {\n    return a.releaseDate - b.releaseDate;\n  });\n  let minDifference = 100000000000000;\n  for (let i = 0; i < sortedArray.length - 1; i++) {\n    let tempTime = sortedArray[i + 1].releaseDate.getTime() - sortedArray[i].releaseDate.getTime();\n    tempTime = tempTime / (1000 * 60 * 60 * 24);\n    if (minDifference > tempTime) {\n      minDifference = tempTime;\n    }\n  }\n  return String(minDifference);\n};\nexport const createDateObject = date => {\n  const dateObject = new Date(`${date} GMT`);\n  return dateObject;\n};","map":{"version":3,"names":["getBestRatedFilm","films","_bestRatedFilm2","bestRatedFilm","rating","forEach","film","_bestRatedFilm","console","log","name","getLongestFilmDuration","longestFilm","length","getAvgRating","avgRating","result","resultArray","String","split","slice","getShortestDays","dateObjectArray","formattedDate","createDateObject","releaseDate","push","sortedArray","sort","a","b","minDifference","i","tempTime","getTime","date","dateObject","Date"],"sources":["/home/tradelab/Desktop/project/Documents/CodeScreen_v0whhi70-main/src/Films/utilities.js"],"sourcesContent":["export const getBestRatedFilm = (films) => {\n    let bestRatedFilm = { rating: 0 }\n    films.forEach((film) => {\n        if (film?.rating > bestRatedFilm?.rating)\n            bestRatedFilm = { ...film }\n    })\n    console.log(\"error111\", bestRatedFilm)\n    return bestRatedFilm?.name\n}\n\nexport const getLongestFilmDuration = (films) => {\n    let longestFilm = { length: 0 }\n    films.forEach((film) => {\n        if (film.length > longestFilm.length)\n            longestFilm = { ...film }\n    })\n    return `${longestFilm.length} minutes`\n}\nexport const getAvgRating = (films) => {\n    let avgRating = 0\n    films.forEach((film) => {\n        avgRating += film.rating\n    })\n    const result = avgRating / films.length\n    const resultArray = String(result).split(\".\")\n    return resultArray[0]+\".\" +resultArray[1].slice(0,2)\n}\nexport const getShortestDays = (films) => {\n    const dateObjectArray = []\n    films.forEach((film) => {\n        const formattedDate = createDateObject(film?.releaseDate)\n        dateObjectArray.push({ ...film, releaseDate: formattedDate })\n    })\n    const sortedArray = dateObjectArray.sort((a, b) => {\n        return a.releaseDate - b.releaseDate\n    })\n    let minDifference = 100000000000000\n    \n    for (let i = 0; i < sortedArray.length - 1; i++) {\n        let tempTime = sortedArray[i + 1].releaseDate.getTime() - sortedArray[i].releaseDate.getTime()\n        tempTime = tempTime / (1000 * 60 * 60 * 24)\n        if (minDifference > tempTime) {\n            minDifference = tempTime\n        }\n    }\n    return String(minDifference)\n}\nexport const createDateObject = (date) => {\n    const dateObject = new Date(`${date} GMT`)\n    return dateObject\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}