{"ast":null,"code":"var _jsxFileName = \"/home/tradelab/Desktop/project/Documents/CodeScreen_v0whhi70-main/src/Films/functionalIndex.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Components/Card';\nimport { getAvgRating, getBestRatedFilm, getLongestFilmDuration, getShortestDays } from './utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Films() {\n  _s();\n  const [director, setDirectorName] = useState(\"\");\n  const [filmsArray, setFilmArray] = useState([]);\n  const [directorMoviesSummary, setDirectorMoviesSummary] = useState({\n    rating: \"\",\n    duration: \"\",\n    avgRating: \"\",\n    releaseDiff: \"\"\n  });\n  const [cardContentArray, setCardContentArray] = useState([]);\n  const apiFunction = async e => {\n    e.preventDefault();\n    try {\n      return await new Promise((reject, resolve) => {\n        const payload = {\n          url: \"https://app.codescreen.com/api/assessments/films\",\n          params: {\n            directorName: director\n          },\n          headers: {\n            'Authorization': 'Bearer ' + \"8c5996d5-fb89-46c9-8821-7063cfbc18b1\"\n          },\n          method: \"GET\"\n        };\n        axios(payload).then(result => {\n          // setDirectorMoviesSummary({rating : getBestRatedFilm(result.data)})\n          getShortestDays(result.data);\n          setCardContentArray([{\n            title: \"Best rated film\",\n            value: getBestRatedFilm(result.data)\n          }, {\n            title: \"Longest film duration\",\n            value: getLongestFilmDuration(result.data)\n          }, {\n            title: \"Average rating\",\n            value: getAvgRating(result.data)\n          }, {\n            title: \"Shortest days between release\",\n            value: \"'getShortestDays\"\n          }]);\n          setFilmArray(result.data);\n        });\n      });\n    } catch (error) {\n      return console.log(\"error\", error);\n    }\n  };\n  console.log(\"error\", getBestRatedFilm(filmsArray));\n  //  const cardContentArray = [\n  //     {\n  //         title: \"Best rated film\",\n  //         value: directorMoviesSummary.rating,\n  //     },\n  //     {\n  //         title: \"Longest film duration\",\n  //         value: 'Gladiator',\n  //     },\n  //     {\n  //         title: \"Average rating\",\n  //         value: 'Gladiator',\n  //     },\n  //     {\n  //         title: \"Shortest days between release\",\n  //         value: 'Gladiator',\n  //     }\n  // ]\n  // useEffect(() => {\n  //     const timer = setTimeout(() => {\n  //         if (director) {\n  //             apiFunction()\n  //         }\n  //     }, 300)\n  //     return () => clearTimeout(timer)\n  // }, [director])\n  //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"rgba(240, 230, 242, 0.8)\",\n      padding: \"15px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          text: \"rgba(128, 109, 132, 0.95)\",\n          fontSize: \"30px\",\n          fontWeight: 800\n        },\n        children: \"Films Analysis Service \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"input-form\",\n        style: {\n          display: 'flex',\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"input-box\",\n          value: director,\n          onChange: e => setDirectorName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            background: \"rgba(240, 188, 25, 0.95)\",\n            margin: \"10px\",\n            borderRadius: \"5px\"\n          },\n          type: \"submit\",\n          value: \"Submit\",\n          onClick: e => apiFunction(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        columnGap: \"5px\",\n        gridTemplateColumns: \"auto auto\"\n      },\n      children: cardContentArray.length > 0 && cardContentArray.map(singleobject => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"15px\",\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          singleobject: singleobject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Films, \"/ZuBunce/FL+nCp8rKSJhHwG3N0=\");\n_c = Films;\nvar _c;\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"names":["axios","React","useEffect","useState","Card","getAvgRating","getBestRatedFilm","getLongestFilmDuration","getShortestDays","jsxDEV","_jsxDEV","Films","_s","director","setDirectorName","filmsArray","setFilmArray","directorMoviesSummary","setDirectorMoviesSummary","rating","duration","avgRating","releaseDiff","cardContentArray","setCardContentArray","apiFunction","e","preventDefault","Promise","reject","resolve","payload","url","params","directorName","headers","method","then","result","data","title","value","error","console","log","style","backgroundColor","padding","children","text","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","id","display","flexDirection","type","onChange","target","background","margin","borderRadius","onClick","columnGap","gridTemplateColumns","length","map","singleobject","_c","$RefreshReg$"],"sources":["/home/tradelab/Desktop/project/Documents/CodeScreen_v0whhi70-main/src/Films/functionalIndex.js"],"sourcesContent":["import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport Card from '../Components/Card'\nimport { getAvgRating, getBestRatedFilm, getLongestFilmDuration, getShortestDays } from './utilities'\n\nexport default function Films() {\n    const [director, setDirectorName] = useState(\"\")\n    const [filmsArray, setFilmArray] = useState([])\n    const [directorMoviesSummary, setDirectorMoviesSummary] = useState({ rating: \"\", duration: \"\", avgRating: \"\", releaseDiff: \"\" })\n    const [cardContentArray, setCardContentArray] = useState([])\n    const apiFunction = async (e) => {\n        e.preventDefault()\n        \n        try {\n            return await new Promise((reject, resolve) => {\n                const payload = {\n                    url: \"https://app.codescreen.com/api/assessments/films\",\n                    params: { directorName: director },\n                    headers: {\n                        'Authorization': 'Bearer ' + \"8c5996d5-fb89-46c9-8821-7063cfbc18b1\"\n                    },\n                    method: \"GET\"\n                }\n                axios(payload).then((result) => {\n                    // setDirectorMoviesSummary({rating : getBestRatedFilm(result.data)})\n                    getShortestDays(result.data)\n                    setCardContentArray([\n                        {\n                            title: \"Best rated film\",\n                            value: getBestRatedFilm(result.data),\n                        },\n                        {\n                            title: \"Longest film duration\",\n                            value: getLongestFilmDuration(result.data),\n                        },\n                        {\n                            title: \"Average rating\",\n                            value: getAvgRating(result.data),\n                        },\n                        {\n                            title: \"Shortest days between release\",\n                            value: \"'getShortestDays\",\n                        }\n                    ])\n                    setFilmArray(result.data)\n                })\n            })\n        } catch (error) {\n            return console.log(\"error\", error)\n        }\n    }\n    console.log(\"error\", getBestRatedFilm(filmsArray))\n    //  const cardContentArray = [\n    //     {\n    //         title: \"Best rated film\",\n    //         value: directorMoviesSummary.rating,\n    //     },\n    //     {\n    //         title: \"Longest film duration\",\n    //         value: 'Gladiator',\n    //     },\n    //     {\n    //         title: \"Average rating\",\n    //         value: 'Gladiator',\n    //     },\n    //     {\n    //         title: \"Shortest days between release\",\n    //         value: 'Gladiator',\n    //     }\n    // ]\n    // useEffect(() => {\n    //     const timer = setTimeout(() => {\n    //         if (director) {\n    //             apiFunction()\n    //         }\n    //     }, 300)\n    //     return () => clearTimeout(timer)\n    // }, [director])\n    //\n    return (\n        <div style={{ backgroundColor: \"rgba(240, 230, 242, 0.8)\", padding: \"15px\" }}>\n            <div >\n                <p style={{ text: \"rgba(128, 109, 132, 0.95)\", fontSize: \"30px\", fontWeight: 800 }}>Films Analysis Service </p>\n                <form id=\"input-form\" style={{ display: 'flex', flexDirection: \"column\" }}>\n                    <input type=\"text\" id=\"input-box\" value={director} onChange={(e) => setDirectorName(e.target.value)}></input>\n                    <input style={{ background: \"rgba(240, 188, 25, 0.95)\", margin: \"10px\", borderRadius: \"5px\" }} type=\"submit\" value=\"Submit\" onClick={(e) => apiFunction(e)}></input>\n                </form>\n\n            </div>\n\n            <div style={{\n                display: \"grid\",\n                columnGap: \"5px\",\n                gridTemplateColumns: \"auto auto\",\n            }}>\n                {cardContentArray.length > 0 &&\n                    cardContentArray.map((singleobject) =>\n                        <div style={{ margin: \"15px\", padding: '20px' }}>\n                            <Card singleobject={singleobject} />\n                        </div>\n\n                    )\n                }\n\n            </div>\n\n\n\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}